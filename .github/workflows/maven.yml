# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time

name: Java CI with Maven and Lifecycle

on:
  push:
    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package -s ci_settings.xml -gs ci_settings.xml --file pom.xml -DskipTests=true

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

#    - name: Setup Sonatype CLI
#      uses: sonatype/actions/setup-iq-cli@v1
#      with:
#        iq-cli-download-url: https://download.sonatype.com/clm/scanner/latest.jar
        
    - name: Sonatype GitHub Actions
      id: evaluate
      uses: sonatype/actions/evaluate@v1   
      # uses: sonatype/actions/run-iq-cli@v1
      with:
        iq-server-url: ${{ vars.IQ_URL }}
        username: ${{ secrets.LIFECYCLE_USERNAME }}
        password: ${{ secrets.LIFECYCLE_PASSWORD }}
        # Lifecycle (IQ Server) application ID. When Automatic Applications is enabled and the application ID has not yet been used, a new application will be created with the given ID.
        application-id: JNTestApps.JavaMavenTestApp-GitHub
        # Space-separated list of paths to specific files, directories, or docker images. Apache Ant-styled patterns are allowed.
        scan-targets: target/*.jar
        upload-sarif-file: true

